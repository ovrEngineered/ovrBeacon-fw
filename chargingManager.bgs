#
# @author Christopher Armenio
#


######## imports ########


######## public constants ########


######## private constants ########
const CHARGING_PORT_NUM = 1
const CHARGING_PIN_NUM = 0

const RGB_CHARGING() = "\x33\x19\x00"
const BLINK_PERIOD_MS = 1500
const BLINK_DUTYCYCLE_PCNT100 = 5


######## public variables ########
export dim chargingManager_isCharging


######## private variables ########
dim result
dim port
dim wasCharging


######## public procedures ########
export procedure chargingManager_init()
   wasCharging = 0
   chargingManager_isCharging = 0
end


export procedure chargingManager_update()
   call hardware_io_port_read(CHARGING_PORT_NUM, 1 << CHARGING_PIN_NUM)(result, port, chargingManager_isCharging)
   chargingManager_isCharging = 1 ^ chargingManager_isCharging                           # poor man's NOT
   if( chargingManager_isCharging & (wasCharging = 0) ) then
      call ovrBeaconAdvertManager_updateChargingStatus(chargingManager_isCharging)
      call pca9624_blinkRgb(BLINK_PERIOD_MS, BLINK_DUTYCYCLE_PCNT100, RGB_CHARGING(:))
   end if
   if( (chargingManager_isCharging = 0) & wasCharging ) then
      call ovrBeaconAdvertManager_updateChargingStatus(chargingManager_isCharging)
      call pca9624_blank()
   end if
   wasCharging = chargingManager_isCharging
end


export procedure chargingManager_resumeChargingLeds()
   if( chargingManager_isCharging ) then
      call pca9624_blinkRgb(BLINK_PERIOD_MS, BLINK_DUTYCYCLE_PCNT100, RGB_CHARGING(:))
   end if
end


######## private procedures ########


######## system events ########
